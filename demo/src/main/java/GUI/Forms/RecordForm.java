/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI.Forms;

import javax.swing.*;
import javax.swing.table.*;
import javax.swing.text.AbstractDocument;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.util.List;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;

import GUI.components.*;
import GUI.filter.*;
import enums.Punishment;
import BUS.MemberBUS;
import BUS.UsageBUS;
import BUS.ViolationBUS;
import Entity.Member;
import Entity.Usage;
import Entity.Violation;

/**
 *
 * @author Ngan Ngo
 */
public class RecordForm extends javax.swing.JPanel {

    /**
     * Creates new form RecordForm
     */
    public RecordForm() {
        initComponents();
        setupEnterKeyAction();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        formPnl = new javax.swing.JPanel();
        idLbl = new javax.swing.JLabel();
        departmentLbl = new javax.swing.JLabel();
        branchLbl = new javax.swing.JLabel();
        nameLbl = new javax.swing.JLabel();
        id = new CustomTextField();
        department = new CustomTextField();
        branch = new CustomTextField();
        name = new CustomTextField();
        jPanel2 = new javax.swing.JPanel();
        devicePnl = new javax.swing.JPanel();
        deviceLbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        deviceTable = new javax.swing.JTable();
        violatePnl = new javax.swing.JPanel();
        violateLbl = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        violateTable = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(1050, 770));
        setMinimumSize(new java.awt.Dimension(1050, 770));
        setPreferredSize(new java.awt.Dimension(1050, 770));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1050, 100));

        title.setBackground(new java.awt.Color(255, 255, 255));
        title.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        title.setForeground(new java.awt.Color(0, 0, 0));
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("HỆ THỐNG QUẢN LÝ THÀNH VIÊN");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                Short.MAX_VALUE));
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 66,
                                javax.swing.GroupLayout.PREFERRED_SIZE));

        formPnl.setBackground(new java.awt.Color(255, 255, 255));
        formPnl.setForeground(new java.awt.Color(0, 0, 0));
        formPnl.setPreferredSize(new java.awt.Dimension(0, 175));

        idLbl.setBackground(new java.awt.Color(255, 255, 255));
        idLbl.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        idLbl.setForeground(new java.awt.Color(0, 0, 0));
        idLbl.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        idLbl.setText("Mã thành viên:");

        departmentLbl.setBackground(new java.awt.Color(255, 255, 255));
        departmentLbl.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        departmentLbl.setForeground(new java.awt.Color(0, 0, 0));
        departmentLbl.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        departmentLbl.setText("Khoa:");

        branchLbl.setBackground(new java.awt.Color(255, 255, 255));
        branchLbl.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        branchLbl.setForeground(new java.awt.Color(0, 0, 0));
        branchLbl.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        branchLbl.setText("Ngành:");

        nameLbl.setBackground(new java.awt.Color(255, 255, 255));
        nameLbl.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        nameLbl.setForeground(new java.awt.Color(0, 0, 0));
        nameLbl.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        nameLbl.setText("Họ và tên:");

        id.setBackground(new java.awt.Color(255, 255, 255));
        id.setPreferredSize(new java.awt.Dimension(64, 30));
        ((AbstractDocument) id.getDocument()).setDocumentFilter(new NumberOnlyFilter());

        department.setBackground(new java.awt.Color(230, 230, 230));
        department.setDisabledTextColor(Color.BLACK);
        department.setPreferredSize(new java.awt.Dimension(64, 30));
        department.setEnabled(false);

        branch.setBackground(new java.awt.Color(230, 230, 230));
        branch.setDisabledTextColor(Color.BLACK);
        branch.setPreferredSize(new java.awt.Dimension(64, 30));
        branch.setEnabled(false);

        name.setBackground(new java.awt.Color(230, 230, 230));
        name.setDisabledTextColor(Color.BLACK);
        name.setPreferredSize(new java.awt.Dimension(64, 30));
        name.setEnabled(false);

        javax.swing.GroupLayout formPnlLayout = new javax.swing.GroupLayout(formPnl);
        formPnl.setLayout(formPnlLayout);
        formPnlLayout.setHorizontalGroup(
                formPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(formPnlLayout.createSequentialGroup()
                                .addGap(93, 93, 93)
                                .addGroup(formPnlLayout
                                        .createParallelGroup(
                                                javax.swing.GroupLayout.Alignment.LEADING,
                                                false)
                                        .addGroup(formPnlLayout
                                                .createSequentialGroup()
                                                .addComponent(idLbl)
                                                .addGap(38, 38, 38)
                                                .addComponent(id,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        250,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(formPnlLayout
                                                .createSequentialGroup()
                                                .addComponent(departmentLbl)
                                                .addPreferredGap(
                                                        javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        Short.MAX_VALUE)
                                                .addComponent(department,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        250,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(
                                        javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                        Short.MAX_VALUE)
                                .addGroup(formPnlLayout.createParallelGroup(
                                        javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(branchLbl)
                                        .addComponent(nameLbl))
                                .addGap(44, 44, 44)
                                .addGroup(formPnlLayout.createParallelGroup(
                                        javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(name,
                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                250,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(branch,
                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                250,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(98, 98, 98)));
        formPnlLayout.setVerticalGroup(
                formPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(formPnlLayout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addGroup(formPnlLayout.createParallelGroup(
                                        javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(idLbl)
                                        .addComponent(nameLbl)
                                        .addComponent(id,
                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(name,
                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(
                                        javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                        31,
                                        Short.MAX_VALUE)
                                .addGroup(formPnlLayout.createParallelGroup(
                                        javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(branchLbl)
                                        .addComponent(departmentLbl)
                                        .addComponent(department,
                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(branch,
                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(41, 41, 41)));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 0, Short.MAX_VALUE));
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 0, Short.MAX_VALUE));

        devicePnl.setBackground(new java.awt.Color(255, 255, 255));

        deviceLbl.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        deviceLbl.setForeground(new java.awt.Color(0, 0, 0));
        deviceLbl.setText("Thiết bị mượn chưa được trả:");

        deviceTable.setBackground(new java.awt.Color(241, 241, 241));
        deviceTable.setForeground(new java.awt.Color(0, 0, 0));
        deviceTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][] {
                },
                new String[] {
                        "Mã thiết bị", "Tên thiết bị", "Ngày mượn", "Trả thiết bị"
                }) {
            Class[] types = new Class[] {
                    java.lang.Integer.class, java.lang.String.class, java.lang.String.class,
                    java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }
        });
        deviceTable.setGridColor(new java.awt.Color(255, 255, 255));
        deviceTable.setRowHeight(30);
        deviceTable.setRowMargin(1);
        deviceTable.setShowGrid(true);
        deviceTable.editingCanceled(null);
        deviceTable.getTableHeader().setOpaque(false);
        deviceTable.getTableHeader().setBackground(Color.decode("#0066FF"));
        deviceTable.getTableHeader().setForeground(Color.WHITE);
        deviceTable.getTableHeader()
                .setPreferredSize(new Dimension(deviceTable.getTableHeader().getWidth(), 30));
        deviceTable.getTableHeader()
                .setFont(new Font(deviceTable.getTableHeader().getFont().getFontName(), Font.BOLD,
                        deviceTable.getTableHeader().getFont().getSize()));
        jScrollPane1.setBackground(Color.WHITE);
        jScrollPane1.setBorder(BorderFactory.createLineBorder(Color.WHITE));
        jScrollPane1.getVerticalScrollBar().setUI(new CustomScrollBarUI());
        jScrollPane1.setViewportView(deviceTable);

        javax.swing.GroupLayout devicePnlLayout = new javax.swing.GroupLayout(devicePnl);
        devicePnl.setLayout(devicePnlLayout);
        devicePnlLayout.setHorizontalGroup(
                devicePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(devicePnlLayout.createSequentialGroup()
                                .addGap(95, 95, 95)
                                .addGroup(devicePnlLayout.createParallelGroup(
                                        javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(deviceLbl)
                                        .addComponent(jScrollPane1,
                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                855,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE,
                                        Short.MAX_VALUE)));
        devicePnlLayout.setVerticalGroup(
                devicePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(devicePnlLayout.createSequentialGroup()
                                .addComponent(deviceLbl)
                                .addPreferredGap(
                                        javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1,
                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                        188,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)));

        violatePnl.setBackground(new java.awt.Color(255, 255, 255));

        violateLbl.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        violateLbl.setForeground(new java.awt.Color(0, 0, 0));
        violateLbl.setText("Vi phạm chưa xử lý:");

        violateTable.setBackground(new java.awt.Color(241, 241, 241));
        violateTable.setForeground(new java.awt.Color(0, 0, 0));
        violateTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][] {
                },
                new String[] {
                        "Mã vi phạm", "Hình thức xử lý", "Số tiền", "Ngày ghi nhận",
                        "Xử lý"
                }) {
            Class[] types = new Class[] {
                    java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class,
                    java.lang.String.class,
                    java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }
        });
        violateTable.setGridColor(new java.awt.Color(255, 255, 255));
        violateTable.setRowHeight(30);
        violateTable.setRowMargin(1);
        violateTable.setShowGrid(true);
        violateTable.editingCanceled(null);
        violateTable.getTableHeader().setOpaque(false);
        violateTable.getTableHeader().setBackground(Color.decode("#0066FF"));
        violateTable.getTableHeader().setForeground(Color.WHITE);
        violateTable.getTableHeader()
                .setPreferredSize(new Dimension(violateTable.getTableHeader().getWidth(), 30));
        violateTable.getTableHeader()
                .setFont(new Font(violateTable.getTableHeader().getFont().getFontName(), Font.BOLD,
                        violateTable.getTableHeader().getFont().getSize()));
        jScrollPane2.setBackground(Color.WHITE);
        jScrollPane2.setBorder(BorderFactory.createLineBorder(Color.WHITE));
        jScrollPane2.getVerticalScrollBar().setUI(new CustomScrollBarUI());
        jScrollPane2.setViewportView(violateTable);

        javax.swing.GroupLayout violatePnlLayout = new javax.swing.GroupLayout(violatePnl);
        violatePnl.setLayout(violatePnlLayout);
        violatePnlLayout.setHorizontalGroup(
                violatePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(violatePnlLayout.createSequentialGroup()
                                .addGap(95, 95, 95)
                                .addGroup(
                                        violatePnlLayout.createParallelGroup(
                                                javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(violateLbl)
                                                .addComponent(jScrollPane2,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        855,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(102, Short.MAX_VALUE)));
        violatePnlLayout.setVerticalGroup(
                violatePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(violatePnlLayout.createSequentialGroup()
                                .addComponent(violateLbl)
                                .addPreferredGap(
                                        javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2,
                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                        188,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1058,
                                Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(
                                        javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(formPnl,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                1052,
                                                Short.MAX_VALUE)
                                        .addComponent(devicePnl,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                Short.MAX_VALUE)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(violatePnl,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                .addPreferredGap(
                                        javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel2,
                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                        Short.MAX_VALUE)));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1,
                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                        66,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(
                                        javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(formPnl,
                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(
                                        javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(
                                        javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jPanel2,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                Short.MAX_VALUE)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(devicePnl,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(violatePnl,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 71, Short.MAX_VALUE)))));
    }// </editor-fold>//GEN-END:initComponents

    // ----------------------------------------------------------------
    private void setupEnterKeyAction() {
        InputMap inputMap = id.getInputMap();
        ActionMap actionMap = id.getActionMap();

        KeyStroke enterKey = KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0);
        inputMap.put(enterKey, "enter");

        actionMap.put("enter", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String idText = id.getText();
                if (!idText.isEmpty()) {
                    try {
                        Long maTv = Long.valueOf(idText);
                        Member data = new MemberBUS().getAMemberWithID(maTv);

                        if (data != null) {
                            id.setForeground(Color.BLACK);
                            department.setText(data.getKhoa());
                            branch.setText(data.getNganh());
                            name.setText(data.getHoTen());

                            loadDeviceData(idText);
                            loadViolationData(idText);
                        } else {
                            clearDeviceTable();
                            clearViolationTable();

                            handleInvalidInput("Không tìm thấy MSSV");
                        }
                    } catch (NumberFormatException ex) {
                        handleInvalidInput("Không tìm thấy MSSV");
                    }
                } else {
                    handleInvalidInput("MSSV trống hoặc sai định dạng!");
                }
            }
        });
    }

    private void loadDeviceData(String memberId) {
        try {
            UsageBUS data = new UsageBUS();
            List<Usage> borrowingList = data
                    .GetBorrowingListByMemberId(Integer.valueOf(memberId));

            DefaultTableModel model = (DefaultTableModel) deviceTable.getModel();
            model.setRowCount(0);

            for (Usage usage : borrowingList) {
                model.addRow(new Object[] {
                        usage.getEquipmentId(),
                        usage.getEquipmentId(), // chưa sửa Tên ----------------------------------------------------------------
                        usage.getBorrowingTime(),
                        false
                });
            }

            TableColumnModel columnModel = violateTable.getColumnModel();
            TableColumn checkboxColumn = columnModel.getColumn(3);
            ((ItemSelectable) checkboxColumn).addItemListener(e -> {
                currentDate = new Date();
                int selectedRow = violateTable.getSelectedRow();
                if (selectedRow != -1) {
                    Integer idUsage = (Integer) model.getValueAt(selectedRow, 0);
                    Usage usageSelected = data.getUsage(idUsage);
                    if (usageSelected != null) {
                        try {
                            if (e.getStateChange() == ItemEvent.SELECTED) {
                                data.AddReturnTimeOfUsage(idUsage, new java.sql.Date(currentDate.getTime()));
                            } else if (e.getStateChange() == ItemEvent.DESELECTED) {
                                data.RemoveReturnTimeOfUsage(idUsage);
                            }
                        } catch (Exception e1) {
                            handleDataLoadError("Đã xảy ra lỗi khi ghi nhận ngày trả.");
                        }
                    }
                }
            });
        } catch (Exception ex) {
            handleDataLoadError("Đã xảy ra lỗi khi lấy dữ liệu thiết bị.");
        }
    }

    private void loadViolationData(String memberId) {
        try {
            ViolationBUS data = new ViolationBUS();
            List<Violation> violatingList = data.GetViolationListByFilter(Integer.valueOf(memberId), 0,
                    null, null);

            DefaultTableModel model = (DefaultTableModel) violateTable.getModel();
            model.setRowCount(0);

            Date lockEndDate;
            Calendar calendar = Calendar.getInstance();
            currentDate = new Date();

            for (Violation violation : violatingList) {
                lockEndDate = violation.getHandlingDate();
                calendar.setTime(lockEndDate);

                ArrayList<String> punishmentList = Punishment.getPunishment();
                String handlingType = violation.getHadlingType();

                if (punishmentList.get(1).equals(handlingType)) {
                    calendar.add(Calendar.MONTH, 1);
                } else if (punishmentList.get(2).equals(handlingType)) {
                    calendar.add(Calendar.MONTH, 2);
                } else if (punishmentList.get(3).equals(handlingType)) {
                    calendar.add(Calendar.MONTH, 6);
                }

                if (calendar.getTime().before(currentDate)) {
                    data.ChangeStatusOfViolation(violation);
                } else {
                    model.addRow(new Object[] {
                            violation.getViolationId(),
                            violation.getHadlingType(),
                            violation.getFine(),
                            violation.getHandlingDate(),
                            false
                    });
                }
            }

            TableColumnModel columnModel = violateTable.getColumnModel();
            TableColumn checkboxColumn = columnModel.getColumn(4);
            ((ItemSelectable) checkboxColumn).addItemListener(e -> {
                if (e.getStateChange() == ItemEvent.SELECTED || e.getStateChange() == ItemEvent.DESELECTED) {
                    int selectedRow = violateTable.getSelectedRow();
                    Integer idViolation = (Integer) model.getValueAt(selectedRow, 0);
                    Violation violationSelected = data.getViolation(idViolation);
                    if (violationSelected != null) {
                        try {
                            data.ChangeStatusOfViolation(violationSelected);
                        } catch (Exception e1) {
                            handleDataLoadError("Đã xảy ra lỗi khi chuyển đổi trạng thái.");
                        }
                    }
                }
            });
        } catch (Exception ex) {
            handleDataLoadError("Đã xảy ra lỗi khi lấy dữ liệu vi phạm.");
        }
    }

    // ----------------------------------------------------------------
    private void handleInvalidInput(String message) {
        id.setForeground(Color.RED);
        department.setText("");
        branch.setText("");
        name.setText("");
        clearDeviceTable();
        clearViolationTable();
        handleDataLoadError(message);
    }

    // Method to handle data load error
    private void handleDataLoadError(String message) {
        JOptionPane.showMessageDialog(
                RecordForm.this,
                message,
                "Error",
                JOptionPane.ERROR_MESSAGE);
    }

    // Method to clear device table
    private void clearDeviceTable() {
        DefaultTableModel model = (DefaultTableModel) deviceTable.getModel();
        model.setRowCount(0);
    }

    // Method to clear violation table
    private void clearViolationTable() {
        DefaultTableModel model = (DefaultTableModel) violateTable.getModel();
        model.setRowCount(0);
    }

    // TYPE enum
    private enum PunishmentType {
        FINE("Phạt tiền"),
        LOCK_1_MONTH("Khóa thẻ 1 tháng"),
        LOCK_2_MONTH("Khóa thẻ 2 tháng"),
        LOCK_6_MONTH("Khóa thẻ 6 tháng");

        PunishmentType(String label) {
        }
    }

    // ----------------------------------------------------------------

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private CustomTextField branch;
    private CustomTextField department;
    private CustomTextField id;
    private CustomTextField name;
    private javax.swing.JLabel branchLbl;
    private javax.swing.JLabel departmentLbl;
    private javax.swing.JLabel deviceLbl;
    private javax.swing.JPanel devicePnl;
    private javax.swing.JTable deviceTable;
    private javax.swing.JPanel formPnl;
    private javax.swing.JLabel idLbl;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel nameLbl;
    private javax.swing.JLabel title;
    private javax.swing.JLabel violateLbl;
    private javax.swing.JPanel violatePnl;
    private javax.swing.JTable violateTable;

    private Date currentDate = new Date();

    // End of variables declaration//GEN-END:variables
    public static void main(String[] args) {
        JFrame frame = new JFrame("Record Form");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.getContentPane().add(new RecordForm());
        frame.pack();
        frame.setVisible(true);
    }
}